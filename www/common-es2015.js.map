{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/button-active-0d5784f9.js","./node_modules/@ionic/core/dist/esm/framework-delegate-d1eb6504.js","./node_modules/@ionic/core/dist/esm/haptic-7b8ba70a.js","./node_modules/@ionic/core/dist/esm/spinner-configs-c78e170e.js","./node_modules/@ionic/core/dist/esm/theme-3f0b0c04.js","./src/app/docs/docs.page.html","./src/app/docs/docs.page.scss","./src/app/docs/docs.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqD;AACD;AACmE;;AAEvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4DAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4DAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wEAAa;AACxB;AACA;AACA;AACA,uEAAuE,qDAAoB;AAC3F,sEAAsE,qDAAsB;AAC5F;AACA;AACA,YAAY,6DAAkB;AAC9B;AACA;AACA,KAAK;AACL;;AAE0C;;;;;;;;;;;;;AC/D1C;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEsD;;;;;;;;;;;;;ACjCtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,QAAQ;AACrC,KAAK;AACL;AACA,qBAAqB,iBAAiB;AACtC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;;AAEoI;;;;;;;;;;;;;ACzGpI;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,wCAAwC,sCAAsC;AAC9E,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,wCAAwC,sCAAsC;AAC9E,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEyB;;;;;;;;;;;;;AC7GzB;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,MAAM;AAC5B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEqF;;;;;;;;;;;;;ACzCrF;AAAe,qIAAsE,unBAAunB,iCAAiC,8NAA8N,2BAA2B,EAAE,EAAE,uSAAuS,uCAAuC,uRAAuR,mJAAmJ,w2CAAw2C,6HAA6H,8BAA8B,EAAE,waAAwa,4IAA4I,gJAAgJ,mJAAmJ,8IAA8I,kJAAkJ,kJAAkJ,iJAAiJ,qJAAqJ,mJAAmJ,+1BAA+1B,E;;;;;;;;;;;;ACAxwL;AAAe,6GAA8C,mIAAmI,E;;;;;;;;;;;;;;;;;ACA9I;AAOlD,IAAa,QAAQ,GAArB,MAAa,QAAQ;IAEnB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;AAPY,QAAQ;IALpB,+DAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,8MAA+B;;KAEhC,CAAC;GACW,QAAQ,CAOpB;AAPoB","file":"common-es2015.js","sourcesContent":["import { c as writeTask } from './index-44bf8136.js';\nimport { createGesture } from './index-eea61379.js';\nimport { h as hapticSelectionEnd, a as hapticSelectionStart, b as hapticSelectionChanged } from './haptic-7b8ba70a.js';\n\nconst createButtonActiveGesture = (el, isButton) => {\n    let currentTouchedButton;\n    let initialTouchedButton;\n    const activateButtonAtPoint = (x, y, hapticFeedbackFn) => {\n        if (typeof document === 'undefined') {\n            return;\n        }\n        const target = document.elementFromPoint(x, y);\n        if (!target || !isButton(target)) {\n            clearActiveButton();\n            return;\n        }\n        if (target !== currentTouchedButton) {\n            clearActiveButton();\n            setActiveButton(target, hapticFeedbackFn);\n        }\n    };\n    const setActiveButton = (button, hapticFeedbackFn) => {\n        currentTouchedButton = button;\n        if (!initialTouchedButton) {\n            initialTouchedButton = currentTouchedButton;\n        }\n        const buttonToModify = currentTouchedButton;\n        writeTask(() => buttonToModify.classList.add('ion-activated'));\n        hapticFeedbackFn();\n    };\n    const clearActiveButton = (dispatchClick = false) => {\n        if (!currentTouchedButton) {\n            return;\n        }\n        const buttonToModify = currentTouchedButton;\n        writeTask(() => buttonToModify.classList.remove('ion-activated'));\n        /**\n         * Clicking on one button, but releasing on another button\n         * does not dispatch a click event in browsers, so we\n         * need to do it manually here. Some browsers will\n         * dispatch a click if clicking on one button, dragging over\n         * another button, and releasing on the original button. In that\n         * case, we need to make sure we do not cause a double click there.\n         */\n        if (dispatchClick && initialTouchedButton !== currentTouchedButton) {\n            currentTouchedButton.click();\n        }\n        currentTouchedButton = undefined;\n    };\n    return createGesture({\n        el,\n        gestureName: 'buttonActiveDrag',\n        threshold: 0,\n        onStart: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionStart),\n        onMove: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionChanged),\n        onEnd: () => {\n            clearActiveButton(true);\n            hapticSelectionEnd();\n            initialTouchedButton = undefined;\n        }\n    });\n};\n\nexport { createButtonActiveGesture as c };\n","const attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n    if (delegate) {\n        return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n    }\n    if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n        throw new Error('framework delegate is missing');\n    }\n    const el = (typeof component === 'string')\n        ? container.ownerDocument && container.ownerDocument.createElement(component)\n        : component;\n    if (cssClasses) {\n        cssClasses.forEach(c => el.classList.add(c));\n    }\n    if (componentProps) {\n        Object.assign(el, componentProps);\n    }\n    container.appendChild(el);\n    if (el.componentOnReady) {\n        await el.componentOnReady();\n    }\n    return el;\n};\nconst detachComponent = (delegate, element) => {\n    if (element) {\n        if (delegate) {\n            const container = element.parentElement;\n            return delegate.removeViewFromDom(container, element);\n        }\n        element.remove();\n    }\n    return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","const HapticEngine = {\n    getEngine() {\n        const win = window;\n        return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n    },\n    available() {\n        return !!this.getEngine();\n    },\n    isCordova() {\n        return !!window.TapticEngine;\n    },\n    isCapacitor() {\n        const win = window;\n        return !!win.Capacitor;\n    },\n    impact(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.impact({ style });\n    },\n    notification(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.notification({ style });\n    },\n    selection() {\n        this.impact({ style: 'light' });\n    },\n    selectionStart() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionStart();\n        }\n        else {\n            engine.gestureSelectionStart();\n        }\n    },\n    selectionChanged() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionChanged();\n        }\n        else {\n            engine.gestureSelectionChanged();\n        }\n    },\n    selectionEnd() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionEnd();\n        }\n        else {\n            engine.gestureSelectionEnd();\n        }\n    }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n    HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n    HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n    HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n    HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n    HapticEngine.impact(options);\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelection as c, hapticImpact as d, hapticSelectionEnd as h };\n","const spinners = {\n    'bubbles': {\n        dur: 1000,\n        circles: 9,\n        fn: (dur, index, total) => {\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            const angle = 2 * Math.PI * index / total;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circles': {\n        dur: 1000,\n        circles: 8,\n        fn: (dur, index, total) => {\n            const step = index / total;\n            const animationDelay = `${(dur * step) - dur}ms`;\n            const angle = 2 * Math.PI * step;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circular': {\n        dur: 1400,\n        elmDuration: true,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 20,\n                cx: 48,\n                cy: 48,\n                fill: 'none',\n                viewBox: '24 24 48 48',\n                transform: 'translate(0,0)',\n                style: {}\n            };\n        }\n    },\n    'crescent': {\n        dur: 750,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 26,\n                style: {}\n            };\n        }\n    },\n    'dots': {\n        dur: 750,\n        circles: 3,\n        fn: (_, index) => {\n            const animationDelay = -(110 * index) + 'ms';\n            return {\n                r: 6,\n                style: {\n                    'left': `${9 - (9 * index)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 17,\n                y2: 29,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines-small': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 12,\n                y2: 20,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","const hostContext = (selector, el) => {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color) => {\n    return (typeof color === 'string' && color.length > 0) ? {\n        'ion-color': true,\n        [`ion-color-${color}`]: true\n    } : undefined;\n};\nconst getClassList = (classes) => {\n    if (classes !== undefined) {\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter(c => c != null)\n            .map(c => c.trim())\n            .filter(c => c !== '');\n    }\n    return [];\n};\nconst getClassMap = (classes) => {\n    const map = {};\n    getClassList(classes).forEach(c => map[c] = true);\n    return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n            if (ev != null) {\n                ev.preventDefault();\n            }\n            return router.push(url, direction, animation);\n        }\n    }\n    return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","export default \"<ion-header>\\n<meta http-equiv=\\\"Content-Type\\\" content=\\\"text/xhtml;charset=UTF-8\\\"/>\\n<meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=9\\\"/>\\n<meta name=\\\"generator\\\" content=\\\"Doxygen 1.8.8\\\"/>\\n<title>SWTP2020_Framework: Main Page</title>\\n<link href=\\\"tabs.css\\\" rel=\\\"stylesheet\\\" type=\\\"text/css\\\"/>\\n<script type=\\\"text/javascript\\\" src=\\\"jquery.js\\\"></script>\\n<script type=\\\"text/javascript\\\" src=\\\"dynsections.js\\\"></script>\\n<link href=\\\"navtree.css\\\" rel=\\\"stylesheet\\\" type=\\\"text/css\\\"/>\\n<script type=\\\"text/javascript\\\" src=\\\"resize.js\\\"></script>\\n<script type=\\\"text/javascript\\\" src=\\\"navtree.js\\\"></script>\\n<script type=\\\"text/javascript\\\">\\n  $(document).ready(initResizable);\\n  $(window).load(resizeHeight);\\n</script>\\n<link href=\\\"search/search.css\\\" rel=\\\"stylesheet\\\" type=\\\"text/css\\\"/>\\n<script type=\\\"text/javascript\\\" src=\\\"search/search.js\\\"></script>\\n<script type=\\\"text/javascript\\\">\\n  $(document).ready(function() { searchBox.OnSelectItem(0); });\\n</script>\\n<link href=\\\"doxygen.css\\\" rel=\\\"stylesheet\\\" type=\\\"text/css\\\" />\\n</ion-header>\\n<ion-content>\\n    <div id=\\\"top\\\"><!-- do not remove this div, it is closed by doxygen! -->\\n<div id=\\\"titlearea\\\">\\n<table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\">\\n <tbody>\\n <tr style=\\\"height: 56px;\\\">\\n  <td style=\\\"padding-left: 0.5em;\\\">\\n   <div id=\\\"projectname\\\">SWTP2020_Framework\\n   </div>\\n  </td>\\n </tr>\\n </tbody>\\n</table>\\n</div>\\n<!-- end header part -->\\n<!-- Generated by Doxygen 1.8.8 -->\\n<script type=\\\"text/javascript\\\">\\nvar searchBox = new SearchBox(\\\"searchBox\\\", \\\"search\\\",false,'Search');\\n</script>\\n  <div id=\\\"navrow1\\\" class=\\\"tabs\\\">\\n    <ul class=\\\"tablist\\\">\\n      <li class=\\\"current\\\"><a href=\\\"index.html\\\"><span>Main&#160;Page</span></a></li>\\n      <li><a href=\\\"namespaces.html\\\"><span>Packages</span></a></li>\\n      <li><a href=\\\"annotated.html\\\"><span>Classes</span></a></li>\\n      <li><a href=\\\"files.html\\\"><span>Files</span></a></li>\\n      <li>\\n        <div id=\\\"MSearchBox\\\" class=\\\"MSearchBoxInactive\\\">\\n        <span class=\\\"left\\\">\\n          <img id=\\\"MSearchSelect\\\" src=\\\"search/mag_sel.png\\\"\\n               onmouseover=\\\"return searchBox.OnSearchSelectShow()\\\"\\n               onmouseout=\\\"return searchBox.OnSearchSelectHide()\\\"\\n               alt=\\\"\\\"/>\\n          <input type=\\\"text\\\" id=\\\"MSearchField\\\" value=\\\"Search\\\" accesskey=\\\"S\\\"\\n               onfocus=\\\"searchBox.OnSearchFieldFocus(true)\\\"\\n               onblur=\\\"searchBox.OnSearchFieldFocus(false)\\\"\\n               onkeyup=\\\"searchBox.OnSearchFieldChange(event)\\\"/>\\n          </span><span class=\\\"right\\\">\\n            <a id=\\\"MSearchClose\\\" href=\\\"javascript:searchBox.CloseResultsWindow()\\\"><img id=\\\"MSearchCloseImg\\\" border=\\\"0\\\" src=\\\"search/close.png\\\" alt=\\\"\\\"/></a>\\n          </span>\\n        </div>\\n      </li>\\n    </ul>\\n  </div>\\n</div><!-- top -->\\n<div id=\\\"side-nav\\\" class=\\\"ui-resizable side-nav-resizable\\\">\\n  <div id=\\\"nav-tree\\\">\\n    <div id=\\\"nav-tree-contents\\\">\\n      <div id=\\\"nav-sync\\\" class=\\\"sync\\\"></div>\\n    </div>\\n  </div>\\n  <div id=\\\"splitbar\\\" style=\\\"-moz-user-select:none;\\\"\\n       class=\\\"ui-resizable-handle\\\">\\n  </div>\\n</div>\\n<script type=\\\"text/javascript\\\">\\n$(document).ready(function(){initNavTree('index.html','');});\\n</script>\\n<div id=\\\"doc-content\\\">\\n<!-- window showing the filter options -->\\n<div id=\\\"MSearchSelectWindow\\\"\\n     onmouseover=\\\"return searchBox.OnSearchSelectShow()\\\"\\n     onmouseout=\\\"return searchBox.OnSearchSelectHide()\\\"\\n     onkeydown=\\\"return searchBox.OnSearchSelectKey(event)\\\">\\n<a class=\\\"SelectItem\\\" href=\\\"javascript:void(0)\\\" onclick=\\\"searchBox.OnSelectItem(0)\\\"><span class=\\\"SelectionMark\\\">&#160;</span>All</a><a class=\\\"SelectItem\\\" href=\\\"javascript:void(0)\\\" onclick=\\\"searchBox.OnSelectItem(1)\\\"><span class=\\\"SelectionMark\\\">&#160;</span>Classes</a><a class=\\\"SelectItem\\\" href=\\\"javascript:void(0)\\\" onclick=\\\"searchBox.OnSelectItem(2)\\\"><span class=\\\"SelectionMark\\\">&#160;</span>Namespaces</a><a class=\\\"SelectItem\\\" href=\\\"javascript:void(0)\\\" onclick=\\\"searchBox.OnSelectItem(3)\\\"><span class=\\\"SelectionMark\\\">&#160;</span>Files</a><a class=\\\"SelectItem\\\" href=\\\"javascript:void(0)\\\" onclick=\\\"searchBox.OnSelectItem(4)\\\"><span class=\\\"SelectionMark\\\">&#160;</span>Functions</a><a class=\\\"SelectItem\\\" href=\\\"javascript:void(0)\\\" onclick=\\\"searchBox.OnSelectItem(5)\\\"><span class=\\\"SelectionMark\\\">&#160;</span>Variables</a><a class=\\\"SelectItem\\\" href=\\\"javascript:void(0)\\\" onclick=\\\"searchBox.OnSelectItem(6)\\\"><span class=\\\"SelectionMark\\\">&#160;</span>Typedefs</a><a class=\\\"SelectItem\\\" href=\\\"javascript:void(0)\\\" onclick=\\\"searchBox.OnSelectItem(7)\\\"><span class=\\\"SelectionMark\\\">&#160;</span>Enumerations</a><a class=\\\"SelectItem\\\" href=\\\"javascript:void(0)\\\" onclick=\\\"searchBox.OnSelectItem(8)\\\"><span class=\\\"SelectionMark\\\">&#160;</span>Enumerator</a><a class=\\\"SelectItem\\\" href=\\\"javascript:void(0)\\\" onclick=\\\"searchBox.OnSelectItem(9)\\\"><span class=\\\"SelectionMark\\\">&#160;</span>Properties</a></div>\\n\\n<!-- iframe showing the search results (closed by default) -->\\n<div id=\\\"MSearchResultsWindow\\\">\\n<iframe src=\\\"javascript:void(0)\\\" frameborder=\\\"0\\\"\\n        name=\\\"MSearchResults\\\" id=\\\"MSearchResults\\\">\\n</iframe>\\n</div>\\n\\n<div class=\\\"header\\\">\\n  <div class=\\\"headertitle\\\">\\n<div class=\\\"title\\\">SWTP2020_Framework Documentation</div>  </div>\\n</div><!--header-->\\n<div class=\\\"contents\\\">\\n</div><!-- contents -->\\n</div><!-- doc-content -->\\n<!-- start footer part -->\\n<div id=\\\"nav-path\\\" class=\\\"navpath\\\"><!-- id is needed for treeview function! -->\\n  <ul>\\n    <li class=\\\"footer\\\">Generated on Tue Aug 11 2020 14:02:56 for SWTP2020_Framework by\\n    <a href=\\\"http://www.doxygen.org/index.html\\\">\\n    <img class=\\\"footer\\\" src=\\\"doxygen.png\\\" alt=\\\"doxygen\\\"/></a> 1.8.8 </li>\\n  </ul>\\n</div>\\n</ion-content>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RvY3MvZG9jcy5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-docs',\n  templateUrl: './docs.page.html',\n  styleUrls: ['./docs.page.scss'],\n})\nexport class DocsPage implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n"],"sourceRoot":"webpack:///"}